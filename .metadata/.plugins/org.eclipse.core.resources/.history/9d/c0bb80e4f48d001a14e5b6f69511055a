package com.stackroute.ecom.filter;

import java.io.IOException;
import java.security.SignatureException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.filter.GenericFilterBean;

public class MyFilter extends GenericFilterBean {

	@Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
			throws IOException, ServletException {
	
		HttpServletRequest httpreq=(HttpServletRequest)request;
		HttpServletResponse httpres=(HttpServletResponse)response;
		
		String headerinfo=httpreq.getHeader("Authorization");
		
		
		httpres.setHeader("Access-Control-Allow-Origin", httpreq.getHeader("Origin"));

		 httpres.setHeader("Access-Control-Allow-Crendentials", "true");
		
		httpres.setHeader("Access-Control-Allow-Methods", "POST,GET,PUT,DELETE");
		
     if((headerinfo==null )|| !headerinfo.startsWith("Bearer"))
    	 throw new ServletException("Token not found");
		
	String tokeninfo=headerinfo.substring(7);
	
	try
	{
 		 JwtParser parser= Jwts.
		 
	}
	catch(SignatureException se)
	{
		
	}

//	catch(MalformedJwtException exc)
//	{
//		
//	}
	
	
	
		
	}

}
